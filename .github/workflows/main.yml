name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - qa
  pull_request:
    branches:
      - dev
      - qa

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m venv venv
        . venv/bin/activate
        pip install -r requirements.txt

    - name: Run tests
      run: |
        . venv/bin/activate
        pytest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up SSH key for EC2
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_PRUEBA }}

    - name: Deploy to EC2
      env:
        USERNAME: ${{ secrets.EC2_USERNAME }}
        PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
      run: |
        scp -r ./* $USERNAME@$PUBLIC_IP:~/app
        ssh $USERNAME@$PUBLIC_IP << 'EOF'
          cd ~/app
          # Asegúrate de que tu aplicación esté configurada correctamente en tu servidor
          # Instala las dependencias si es necesario
          source venv/bin/activate
          pip install -r requirements.txt
          # Reinicia el servidor web o la aplicación
          sudo systemctl restart your_flask_app.service
        EOF
